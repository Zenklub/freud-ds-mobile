name: Check PR

on: [pull_request]

jobs:
  # leaks:
  #   name: leaks
  #   runs-on: ubuntu-latest
  #   if: "!contains(github.event.head_commit.message, 'skip ci')"
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: '0'
  #   - name: Check code for leaks
  #     uses: zricethezav/gitleaks-action@v2
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} 
  #       GITLEAKS_NOTIFY_USER_LIST: ${{ secrets.GITLEAKS_NOTIFY_USER_LIST }}

  lint:
    name: lint + typecheck
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Check linting
      run: yarn lint:fix
    - name: Check types
      run: yarn lint:typescript

  language:
    name: language
    needs: [ lint ]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - name: Check language with Alex
      uses: brown-ccv/alex-recommends@v1.2.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        pr_only: true

  coverage:
    name: code coverage
    permissions:
      checks: write
      pull-requests: write
      contents: write

    runs-on: ubuntu-latest
    needs: [ language ]
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Find PR number
      id: findPr
      uses: jwalton/gh-find-current-pr@v1
    
    - name: Coverage report
      uses: ArtiomTr/jest-coverage-report-action@v2
      with:
        test-script: yarn test:coverage --json --coverage --testLocationInResults --outputFile=report.json
        output: report-markdown
        prnumber: ${{ steps.findPr.outputs.number }}

    - name: Add coverage report comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
          # pass output from the previous step by id.
          message: ${{ steps.coverage.outputs.report }}